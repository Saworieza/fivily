<!-- #view/items/index.html.erb is where people view the menu and select their items 

#it uses both items_controller and types_controller 

#when the user clicks "proceed to checkout", it actually goes to the orders controller
#and creates a new instance of the class order 
# once the user clicks submit, it goes to the controller 
#creates an order_id with customer name,
#takes that order_id and populates the order_items table 
#(uses instance varialbes to do so? - maybe)

# put order now buttons next to each item 
# or click into a show page for each item, change quantity, then place order 

 -->

<% if @items.count > 0 %>

  <h2> Your Order </h2>
   
  <table class = "table table-striped">
    <thead>
      <tr> 
        <th> Item Name </th>
        <th> Price </th>
        <th colspan="3"></th> 
      </tr>
    </thead>  
    <tbody> 
      <% @order.items.each do |item| %>
        <tr> 
          <td><%= item.name %></td>
          <td><%= item.price %></td>
          <td>
        </tr>
      <% end %>
    </tbody>
  </table>

  <div class="panel panel-default">
  <div class="panel-heading">
    <h3 class="panel-title">Subtotal</h3>
  </div>
  <div class="panel-body">
    <%= @order.subtotal %>
  </div>
</div>

  <%= link_to 'Checkout', new_order_path, class: 'btn btn-primary' %>

  <h2> Add Items to your order! </h2>

<% else %>

  <h2>Get started by adding an individual item to your order </h2> 

<% end %>


  <% @items.each do |item| %>
    <p><strong><%= item.name %></strong> (<%= price_conversion(item.price) %>)
      <br /> <%= item.description %>
      <%= item.is_custom == true ? '<br /><ins>You can customise this product</ins>'.html_safe : nil %></p>
      <%= link_to 'Add Item', item_path(item), class: 'btn btn-success' %>
  <% end %>